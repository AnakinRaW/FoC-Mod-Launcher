<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:FocLauncher.Controls"
                    xmlns:converters="clr-namespace:FocLauncher.Converters"
                    xmlns:theming="clr-namespace:FocLauncher.Theming;assembly=FocLauncher.Theming">

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <converters:IsNullOrEmptyConverter x:Key="IsNullOrEmptyConverter"/>

    <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static theming:EnvironmentColors.TextBoxTextUnfocused}}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="TextBoxBase.CaretBrush">
            <Setter.Value>
                <Binding RelativeSource="{RelativeSource Self}" Path="Foreground"/>
            </Setter.Value>
        </Setter>
        <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static theming:EnvironmentColors.TextBoxSelection}}"/>
        <Setter Property="AllowDrop" Value="True"/>
        <Setter Property="MaxLines" Value="1"/>
        <Setter Property="MaxLength" Value="100"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border Padding="0,2,0,2" Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer x:Name="PART_ContentHost" Margin="0"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static theming:EnvironmentColors.TextBoxTextDisabled}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type controls:WatermarkedTextBox}">
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Local"/>
        <Setter Property="KeyboardNavigation.IsTabStop" Value="false"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:WatermarkedTextBox}">
                    <Grid SnapsToDevicePixels="True">
                        <Border x:Name="Border" 
                                Background="{DynamicResource {x:Static theming:EnvironmentColors.TextBoxBackground}}" 
                                BorderBrush="{DynamicResource {x:Static theming:EnvironmentColors.TextBoxBorder}}"
                                BorderThickness="1"/>
                        <AccessText x:Name="Watermark" Margin="5,1,5,1"
                                    Text="{TemplateBinding Watermark}"
                                    Foreground="{DynamicResource {x:Static theming:EnvironmentColors.TextBoxWatermark}}" 
                                    Background="Transparent" VerticalAlignment="Center" HorizontalAlignment="Stretch"/>
                        <TextBox x:Name="RealTextBox" Style="{StaticResource TextBoxStyle}" Padding="4,1,4,1"
                                 Text="{Binding RelativeSource={RelativeSource TemplatedParent}, 
                            Path=Text, UpdateSourceTrigger=PropertyChanged}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Value="False">
                            <DataTrigger.Binding>
                                <Binding ElementName="RealTextBox" Path="Text" Converter="{StaticResource IsNullOrEmptyConverter}"/>
                            </DataTrigger.Binding>
                            <Setter TargetName="Watermark" Property="UIElement.Visibility" Value="Hidden"/>
                        </DataTrigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="False">
                            <Setter TargetName="RealTextBox" Property="TextBoxBase.CaretBrush" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="Watermark" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsKeyboardFocusWithin" Value="true">
                            <Setter TargetName="Watermark" Property="TextElement.Foreground"
                                Value="{DynamicResource {x:Static theming:EnvironmentColors.TextBoxWatermarkHover}}"/>
                            <Setter TargetName="Border" Property="Border.BorderBrush"
                                Value="{DynamicResource {x:Static theming:EnvironmentColors.TextBoxBorderFocused}}"/>
                            <Setter TargetName="Border" Property="Panel.Background"
                                Value="{DynamicResource {x:Static theming:EnvironmentColors.TextBoxBackgroundFocused}}"/>
                            <Setter TargetName="RealTextBox" Property="TextElement.Foreground"
                                Value="{DynamicResource {x:Static theming:EnvironmentColors.TextBoxTextFocused}}"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="Watermark" Property="TextElement.Foreground"
                                Value="{DynamicResource {x:Static theming:EnvironmentColors.TextBoxWatermarkHover}}"/>
                            <Setter TargetName="Border" Property="Border.BorderBrush"
                                Value="{DynamicResource {x:Static theming:EnvironmentColors.TextBoxBorderHover}}"/>
                            <Setter TargetName="Border" Property="Panel.Background"
                                Value="{DynamicResource {x:Static theming:EnvironmentColors.TextBoxBackgroundHover}}"/>
                            <Setter TargetName="RealTextBox" Property="TextElement.Foreground"
                                Value="{DynamicResource {x:Static theming:EnvironmentColors.TextBoxTextHover}}"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter TargetName="Watermark" Property="TextElement.Foreground"
                                Value="{DynamicResource {x:Static theming:EnvironmentColors.TextBoxTextDisabled}}"/>
                            <Setter TargetName="RealTextBox" Property="TextElement.Foreground"
                                Value="{DynamicResource {x:Static theming:EnvironmentColors.TextBoxTextDisabled}}"/>
                            <Setter TargetName="Border" Property="Border.BorderBrush"
                                Value="{DynamicResource {x:Static theming:EnvironmentColors.TextBoxBorderDisabled}}"/>
                            <Setter TargetName="Border" Property="Panel.Background"
                                Value="{DynamicResource {x:Static theming:EnvironmentColors.TextBoxBackgroundDisabled}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>