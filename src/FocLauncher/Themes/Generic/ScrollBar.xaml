<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:theming="clr-namespace:FocLauncher.Theming"
                    xmlns:core="clr-namespace:FocLauncher.Theming;assembly=FocLauncher.Theming">

    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="Border" Background="{DynamicResource {x:Static core:EnvironmentColors.ScrollBarArrowBackground}}">
                        <Path x:Name="Glyph" HorizontalAlignment="Center" VerticalAlignment="Center" 
                              Fill="{DynamicResource {x:Static core:EnvironmentColors.ScrollBarArrowGlyph}}" Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static core:EnvironmentColors.ScrollBarArrowMouseOverBackground}}"/>
                            <Setter TargetName="Glyph" Property="Fill" Value="{DynamicResource {x:Static core:EnvironmentColors.ScrollBarArrowGlyphMouseOver}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static core:EnvironmentColors.ScrollBarArrowPressedBackground}}"/>
                            <Setter TargetName="Glyph" Property="Fill" Value="{DynamicResource {x:Static core:EnvironmentColors.ScrollBarArrowGlyphPressed}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static core:EnvironmentColors.ScrollBarArrowDisabledBackground}}"/>
                            <Setter TargetName="Glyph" Property="Fill" Value="{DynamicResource {x:Static core:EnvironmentColors.ScrollBarArrowGlyphDisabled}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
    </Style>

    <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}" BasedOn="{StaticResource ScrollBarThumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border x:Name="Border" BorderThickness="2,0" BorderBrush="Transparent" Background="{DynamicResource {x:Static core:EnvironmentColors.ScrollBarThumbBackground}}"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static core:EnvironmentColors.ScrollBarThumbMouseOverBackground}}"/>
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static core:EnvironmentColors.ScrollBarThumbPressedBackground}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static core:EnvironmentColors.ScrollBarThumbDisabled}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumbHorizontal" TargetType="{x:Type Thumb}" BasedOn="{StaticResource ScrollBarThumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border x:Name="Border" BorderThickness="0,2" BorderBrush="Transparent" Background="{DynamicResource {x:Static core:EnvironmentColors.ScrollBarThumbBackground}}"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static core:EnvironmentColors.ScrollBarThumbMouseOverBackground}}"/>
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static core:EnvironmentColors.ScrollBarThumbPressedBackground}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static core:EnvironmentColors.ScrollBarThumbDisabled}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Border Background="{DynamicResource {x:Static core:EnvironmentColors.ScrollBarBackground}}" 
                BorderBrush="{DynamicResource {x:Static core:EnvironmentColors.ScrollBarBorder}}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                    <RowDefinition/>
                    <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                </Grid.RowDefinitions>
                <RepeatButton  Grid.Row="0" Height="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" Command="ScrollBar.LineUpCommand" 
                               Style="{StaticResource ScrollBarLineButton}" Content="M 0 4 L 8 4 L 4 0 Z"/>
                <Track x:Name="PART_Track" Grid.Row="1" IsDirectionReversed="True">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ScrollBarPageButton}"/>
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumbVertical}"/>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ScrollBarPageButton}"/>
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Row="2" Height="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" Command="ScrollBar.LineDownCommand" 
                              Style="{StaticResource ScrollBarLineButton}" Content="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Border Background="{DynamicResource {x:Static core:EnvironmentColors.ScrollBarBackground}}" 
                BorderBrush="{DynamicResource {x:Static core:EnvironmentColors.ScrollBarBorder}}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                    <ColumnDefinition/>
                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                </Grid.ColumnDefinitions>
                <RepeatButton Grid.Column="0" Style="{StaticResource ScrollBarLineButton}" Content="M 0 4 L 4 8 L 4 0 Z" Command="ScrollBar.LineLeftCommand"/>
                <Track x:Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageLeftCommand" Style="{StaticResource ScrollBarPageButton}"/>
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumbHorizontal}"/>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageRightCommand" Style="{StaticResource ScrollBarPageButton}"/>
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Column="2" Style="{StaticResource ScrollBarLineButton}" Content="M 4 4 L 0 8 L 0 0 Z" Command="ScrollBar.LineRightCommand"/>
            </Grid>

        </Border>
    </ControlTemplate>

    <Style x:Key="{x:Static theming:ScrollBarResourceKeys.ScrollBarStyleKey}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                <Setter Property="Height" Value="Auto"/>
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}"/>
            </Trigger>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Static theming:ScrollBarResourceKeys.ScrollViewerStyleKey}" TargetType="{x:Type ScrollViewer}">
       <Setter Property="Template">
           <Setter.Value>
               <ControlTemplate TargetType="{x:Type ScrollViewer}">
                   <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                       <Grid.ColumnDefinitions>
                           <ColumnDefinition Width="*"/>
                           <ColumnDefinition Width="Auto"/>
                       </Grid.ColumnDefinitions>
                       <Grid.RowDefinitions>
                           <RowDefinition Height="*"/>
                           <RowDefinition Height="Auto"/>
                       </Grid.RowDefinitions>
                        <Rectangle x:Name="Corner" Grid.Row="1" Grid.Column="1" Fill="{DynamicResource {x:Static core:EnvironmentColors.AutoHideResizeGrip}}"/>
                       <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.Row="0" Grid.Column="0"
                                               CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" CanHorizontallyScroll="false"
                                               CanVerticallyScroll="false" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                               Content="{TemplateBinding ContentControl.Content}" Margin="{TemplateBinding Control.Padding}"/>
                        <ScrollBar x:Name="PART_VerticalScrollBar" Style="{StaticResource {x:Static theming:ScrollBarResourceKeys.ScrollBarStyleKey}}" 
                                  Grid.Row="0" Grid.Column="1"
                                  Cursor="Arrow" Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}" Minimum="0"
                                  Orientation="Vertical"
                                  Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}" 
                                  ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}"
                                  Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <ScrollBar x:Name="PART_HorizontalScrollBar" Style="{StaticResource {x:Static theming:ScrollBarResourceKeys.ScrollBarStyleKey}}"
                                  Grid.Row="1" Grid.Column="0"
                                  Cursor="Arrow" Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}" Minimum="0"
                                  Orientation="Horizontal" Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}"
                                  ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}"
                                  Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Grid>
               </ControlTemplate>
           </Setter.Value>
       </Setter>
    </Style>
    
</ResourceDictionary>