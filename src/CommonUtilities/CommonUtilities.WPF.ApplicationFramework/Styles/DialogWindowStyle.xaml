<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:imaging="clr-namespace:Sklavenwalker.CommonUtilities.Wpf.Imaging;assembly=Sklavenwalker.CommonUtilities.WPF.Imaging"
                    xmlns:imageControls="clr-namespace:Sklavenwalker.CommonUtilities.Wpf.Imaging.Controls;assembly=Sklavenwalker.CommonUtilities.WPF.Imaging"
                    xmlns:coreConverters="clr-namespace:Sklavenwalker.CommonUtilities.Wpf.Converters;assembly=Sklavenwalker.CommonUtilities.WPF.Core"
                    xmlns:input="clr-namespace:Sklavenwalker.CommonUtilities.Wpf.ApplicationFramework.Input"
                    xmlns:controls="clr-namespace:Sklavenwalker.CommonUtilities.Wpf.ApplicationFramework.Controls"
                    xmlns:dialog="clr-namespace:Sklavenwalker.CommonUtilities.Wpf.ApplicationFramework.Dialog"
                    xmlns:baseControls="clr-namespace:Sklavenwalker.CommonUtilities.Wpf.Controls;assembly=Sklavenwalker.CommonUtilities.WPF.Controls"
                    xmlns:colors="clr-namespace:Sklavenwalker.CommonUtilities.Wpf.Themes.Colors;assembly=Sklavenwalker.CommonUtilities.WPF.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Sklavenwalker.CommonUtilities.WPF.Controls;component/Styles/AutoSizeModalWindowStyle.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type controls:DialogWindow}" BasedOn="{StaticResource {x:Type baseControls:AutoSizeModalWindow}}">
        <Style.Resources>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <coreConverters:BooleanToFlowDirectionConverter x:Key="BooleanToFlowDirectionConverter"/>
            <coreConverters:IsNullOrEmptyConverter x:Key="IsNullOrEmptyConverter"/>
            <coreConverters:BrushToColorConverter x:Key="BrushToColorConverter"/>

            <DataTemplate x:Key="ButtonContentTemplate" DataType="{x:Type input:ICommandDefinition}">
                <Border>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <imageControls:ThemedImage x:Name="Image" Margin="0,0,8,0" VerticalAlignment="Center" Focusable="False"
                                                   SnapsToDevicePixels="True" UseLayoutRounding="True" ImakgeKey="{Binding Image}"/>
                        <AccessText x:Name="Text" VerticalAlignment="Center" SnapsToDevicePixels="True" Text="{Binding Text}"/>
                    </StackPanel>
                </Border>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding Image}" 
                                 Value="{x:Static imaging:ImageLibrary.InvalidImageKey}">
                        <Setter TargetName="Image" Property="Visibility" Value="Collapsed"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Text, Converter={StaticResource IsNullOrEmptyConverter}}" 
                                 Value="True">
                        <Setter TargetName="Text" Property="Visibility" Value="Collapsed"/>
                        <Setter TargetName="Image" Property="Margin" Value="0"/>
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>

            <Style x:Key="DialogButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="MinWidth" Value="64"/>
                <Setter Property="Height" Value="23"/>
                <Setter Property="Margin" Value="10,0,0,0"/>
                <Setter Property="Padding" Value="10,2"/>
                <Setter Property="IsDefault" Value="{Binding IsDefault}"/>
                <Setter Property="IsCancel" Value="{Binding IsCancel}"/>
                <Setter Property="Content" Value="{Binding CommandDefinition}"/>
                <Setter Property="ToolTip" Value="{Binding CommandDefinition.Tooltip}"/>
                <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.UnifiedButtonCommand}"/>
                <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource Self}, Path=DataContext}"/>
                <Setter Property="ContentTemplate" Value="{StaticResource ButtonContentTemplate}"/>
            </Style>

            <DataTemplate x:Key="ThemedButtonTemplate">
                <baseControls:ThemedButton Style="{StaticResource DialogButtonStyle}"/>
            </DataTemplate>

            <DataTemplate x:Key="ButtonTemplate">
                <Button Style="{StaticResource DialogButtonStyle}"/>
            </DataTemplate>
            
            <dialog:DialogButtonTemplateSelector x:Key="DialogButtonTemplateSelector"
                                                   ThemedButtonTemplate="{StaticResource ThemedButtonTemplate}"
                                                   ButtonTemplate="{StaticResource ButtonTemplate}"/>
        </Style.Resources>
        <Setter Property="imaging:ImageThemingUtilities.ImageBackgroundColor"
                Value="{Binding Background, RelativeSource={RelativeSource Self}, Converter={StaticResource BrushToColorConverter}}"/>
        <Setter Property="MinWidth" Value="280"/>
        <Setter Property="MinHeight" Value="175"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static colors:WindowColors.DialogBackground}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static colors:WindowColors.DialogContentText}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:DialogWindow}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0" Background="{DynamicResource {x:Static colors:WindowColors.DialogContentBackground}}">
                            <ContentPresenter/>
                        </Border>
                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Content="{Binding AdditionalInformation}" Margin="6,6,0,6"/>
                            <ItemsControl Grid.Column="1" VerticalAlignment="Bottom" HorizontalAlignment="Right" IsTabStop="False" ItemsSource="{Binding Buttons}" Margin="0,6,6,6">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <ContentControl Margin="0,8,0,0" HorizontalAlignment="Stretch"
                                                        Content="{Binding}" ContentTemplateSelector="{StaticResource DialogButtonTemplateSelector}"/>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>