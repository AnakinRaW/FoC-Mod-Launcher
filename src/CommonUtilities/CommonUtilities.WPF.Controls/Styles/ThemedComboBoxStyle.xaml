<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:colors="clr-namespace:AnakinRaW.CommonUtilities.Wpf.Themes.Colors"
                    xmlns:controls="clr-namespace:AnakinRaW.CommonUtilities.Wpf.Controls"
                    xmlns:themes="clr-namespace:AnakinRaW.CommonUtilities.Wpf.Themes">

    <Geometry x:Key="DownArrowGeometry">M 0 0 L 3 3 L 6 0 Z</Geometry>

    <ControlTemplate x:Key="ComboBoxItemTemplate" TargetType="{x:Type ComboBoxItem}">
        <Border x:Name="Bd" Background="{TemplateBinding Panel.Background}"
                BorderBrush="{TemplateBinding Border.BorderBrush}"
                BorderThickness="{TemplateBinding Border.BorderThickness}"
                Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="true">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Bd" Property="Background"
                        Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxListItemBackgroundHover}}"/>
                <Setter TargetName="Bd" Property="BorderBrush"
                        Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxListItemBorderHover}}"/>
                <Setter TargetName="Bd" Property="TextElement.Foreground"
                        Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxListItemTextHover}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="KeyboardNavigation.IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Background="Transparent">
                        <Border x:Name="Border" Width="13" HorizontalAlignment="Right"
                                BorderThickness="1,0,0,0" SnapsToDevicePixels="true"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <Path x:Name="Arrow" Margin="0,1,0,0" HorizontalAlignment="Center" VerticalAlignment="Center"
                                  Fill="{TemplateBinding Foreground}"
                                  Data="{StaticResource DownArrowGeometry}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Border" Property="Background"
                                    Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxGlyphBackgroundPressed}}"/>
                            <Setter TargetName="Border"  Property="BorderBrush"
                                    Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxSeparatorPressed}}"/>
                            <Setter TargetName="Arrow" Property="Fill"
                                    Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxGlyphPressed}}"/>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background"
                                    Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxGlyphBackgroundPressed}}"/>
                            <Setter TargetName="Border" Property="BorderBrush"
                                    Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxSeparatorPressed}}"/>
                            <Setter TargetName="Arrow" Property="Fill"
                                    Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxGlyphPressed}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <x:NullExtension/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" 
                                  VerticalScrollBarVisibility="Hidden" Background="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        <Border x:Name="Border" BorderThickness="1"
                BorderBrush="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxBorder}}"
                Background="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxBackground}}">
            <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" Placement="Bottom"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <Popup.PlacementTarget>
                        <Binding ElementName="Border"/>
                    </Popup.PlacementTarget>
                    <Popup.IsOpen>
                        <Binding Path="IsDropDownOpen" RelativeSource="{RelativeSource TemplatedParent}"/>
                    </Popup.IsOpen>
                    <controls:SystemDropShadowChrome x:Name="Shdw" Margin="0,0,5,5" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                                                     Color="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxListShadow}}">
                        <FrameworkElement.MinWidth>
                            <Binding ElementName="Border" Path="ActualWidth"/>
                        </FrameworkElement.MinWidth>
                        <Border x:Name="DropDownBorder" BorderThickness="1" Margin="0,1,0,0"
                                BorderBrush="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxListBorder}}">
                            <ScrollViewer>
                                <Grid Background="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxListBackground}}"
                                      RenderOptions.ClearTypeHint="Enabled">
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"
                                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </controls:SystemDropShadowChrome>
                </Popup>
                <TextBox x:Name="PART_EditableTextBox" Grid.Column="0"
                         Margin="{TemplateBinding Control.Padding}" Style="{StaticResource ComboBoxEditableTextBox}"
                         Foreground="{TemplateBinding TextElement.Foreground}"
                         SelectionBrush="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxTextInputSelection}}"
                         VerticalAlignment="Center"
                         HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                         VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}">
                    <TextBoxBase.CaretBrush>
                        <Binding RelativeSource="{RelativeSource Self}" Path="Foreground"/>
                    </TextBoxBase.CaretBrush>
                    <TextBoxBase.IsReadOnly>
                        <Binding Path="IsReadOnly" RelativeSource="{RelativeSource TemplatedParent}"/>
                    </TextBoxBase.IsReadOnly>
                </TextBox>
                <ToggleButton x:Name="ToggleButton" Grid.Column="1"
                              Background="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxGlyphBackground}}"
                              BorderBrush="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxSeparator}}"
                              Foreground="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxGlyph}}"
                              Style="{StaticResource ComboBoxToggleButton}">
                    <ToggleButton.IsChecked>
                        <Binding Path="IsDropDownOpen" Mode="TwoWay" RelativeSource="{RelativeSource TemplatedParent}"/>
                    </ToggleButton.IsChecked>
                </ToggleButton>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter TargetName="ToggleButton" Property="BorderBrush"
                        Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxSeparatorFocused}}"/>
                <Setter TargetName="ToggleButton" Property="Background"
                        Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxGlyphBackgroundFocused}}"/>
                <Setter TargetName="ToggleButton" Property="Foreground"
                        Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxGlyphFocused}}"/>
                <Setter TargetName="Border" Property="Background"
                        Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxBackgroundFocused}}"/>
                <Setter TargetName="Border" Property="BorderBrush"
                        Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxBorderFocused}}"/>
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxTextFocused}}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="ToggleButton" Property="BorderBrush"
                        Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxSeparatorHover}}"/>
                <Setter TargetName="ToggleButton" Property="Background"
                        Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxGlyphBackgroundHover}}"/>
                <Setter TargetName="ToggleButton" Property="Foreground"
                        Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxGlyphHover}}"/>
                <Setter TargetName="Border" Property="Background"
                        Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxBackgroundHover}}"/>
                <Setter TargetName="Border" Property="BorderBrush"
                        Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxBorderHover}}"/>
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxTextHover}}"/>
            </Trigger>
            <Trigger Property="IsDropDownOpen" Value="true">
                <Setter TargetName="Border" Property="Background"
                        Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxBackgroundPressed}}"/>
                <Setter TargetName="Border" Property="BorderBrush"
                        Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxBorderPressed}}"/>
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxTextPressed}}"/>
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="DropDownBorder" Property="Height" Value="95"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="ToggleButton" Property="Border.BorderBrush" Value="Transparent"/>
                <Setter TargetName="ToggleButton" Property="Background"
                        Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxGlyphBackgroundDisabled}}"/>
                <Setter TargetName="ToggleButton" Property="Foreground"
                        Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxGlyphDisabled}}"/>
                <Setter TargetName="Border" Property="BorderBrush"
                        Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxBorderDisabled}}"/>
                <Setter TargetName="Border" Property="Background"
                        Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxBackgroundDisabled}}"/>
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxTextDisabled}}"/>
            </Trigger>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ThemedComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxListItemText}}"/>
        <Setter Property="Template" Value="{StaticResource ComboBoxItemTemplate}"/>
        <Setter Property="Margin" Value="2,0,2,0"/>
        <Setter Property="InputMethod.IsInputMethodSuspended" Value="true"/>
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <x:NullExtension/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static themes:StyleResourceKeys.ThemedComboBoxStyleKey}" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <x:NullExtension/>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxText}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="3,2"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource ThemedComboBoxItemStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Border x:Name="Border" BorderThickness="{TemplateBinding Border.BorderThickness}"
                            BorderBrush="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxBorder}}"
                            Background="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxBackground}}">
                        <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition MinWidth="12" Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" Placement="Bottom"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                                <Popup.PlacementTarget>
                                    <Binding ElementName="Border"/>
                                </Popup.PlacementTarget>
                                <Popup.IsOpen>
                                    <Binding Path="IsDropDownOpen" RelativeSource="{RelativeSource TemplatedParent}"/>
                                </Popup.IsOpen>
                                <controls:SystemDropShadowChrome Name="Shdw" Margin="0,0,5,5" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                                                                 Color="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxListShadow}}">
                                    <FrameworkElement.MinWidth>
                                        <Binding ElementName="Border" Path="ActualWidth"/>
                                    </FrameworkElement.MinWidth>
                                    <Border x:Name="DropDownBorder" BorderThickness="1" Margin="0,1,0,0"
                                            BorderBrush="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxListBorder}}">
                                        <ScrollViewer>
                                            <Grid RenderOptions.ClearTypeHint="Enabled" 
                                                  Background="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxListBackground}}">
                                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"
                                                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                                            </Grid>
                                        </ScrollViewer>
                                    </Border>
                                </controls:SystemDropShadowChrome>
                            </Popup>
                            <ToggleButton x:Name="ToggleButton" Grid.Column="0" Grid.ColumnSpan="2"
                                          Background="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxGlyphBackground}}"
                                          BorderBrush="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxSeparator}}"
                                          Foreground="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxGlyph}}"
                                          Style="{StaticResource ComboBoxToggleButton}">
                                <ToggleButton.IsChecked>
                                    <Binding Path="IsDropDownOpen" Mode="TwoWay" RelativeSource="{RelativeSource TemplatedParent}"/>
                                </ToggleButton.IsChecked>
                            </ToggleButton>
                            <ContentPresenter Grid.Column="0" IsHitTestVisible="false" Margin="{TemplateBinding Control.Padding}" 
                                              Content="{TemplateBinding Selector.SelectedItem}"
                                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}"
                                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocusWithin" Value="true">
                            <Setter TargetName="ToggleButton" Property="BorderBrush"
                                    Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxSeparatorFocused}}"/>
                            <Setter TargetName="ToggleButton" Property="Background"
                                    Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxGlyphBackgroundFocused}}"/>
                            <Setter TargetName="ToggleButton"  Property="Foreground"
                                    Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxGlyphFocused}}"/>
                            <Setter TargetName="Border" Property="Background"
                                    Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxBackgroundFocused}}"/>
                            <Setter TargetName="Border" Property="BorderBrush"
                                    Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxBorderFocused}}"/>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxTextFocused}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="ToggleButton" Property="BorderBrush"
                                    Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxSeparatorHover}}"/>
                            <Setter TargetName="ToggleButton" Property="Background"
                                    Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxGlyphBackgroundHover}}"/>
                            <Setter TargetName="ToggleButton" Property="Foreground"
                                    Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxGlyphHover}}"/>
                            <Setter TargetName="Border" Property="Background"
                                    Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxBackgroundHover}}"/>
                            <Setter TargetName="Border" Property="BorderBrush"
                                    Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxBorderHover}}"/>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxTextHover}}"/>
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="true">
                            <Setter TargetName="Border" Property="Background"
                                    Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxBackgroundPressed}}"/>
                            <Setter TargetName="Border"  Property="BorderBrush"
                                    Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxBorderPressed}}"/>
                            <Setter Property="Foreground" 
                                    Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxTextPressed}}"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="Height" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="ToggleButton" Property="BorderBrush" Value="Transparent"/>
                            <Setter TargetName="ToggleButton" Property="Background"
                                    Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxGlyphBackgroundDisabled}}"/>
                            <Setter TargetName="ToggleButton" Property="Foreground"
                                    Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxGlyphDisabled}}"/>
                            <Setter TargetName="Border" Property="BorderBrush"
                                    Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxBorderDisabled}}"/>
                            <Setter TargetName="Border" Property="Background"
                                    Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxBackgroundDisabled}}"/>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static colors:CommonControlsColors.ComboBoxTextDisabled}}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="KeyboardNavigation.IsTabStop" Value="false"/>
                <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                <Setter Property="Padding" Value="0,2,0,2"/>
            </Trigger>
            <Trigger Property="IsEditable" Value="false">
                <Setter Property="InputMethod.IsInputMethodSuspended" Value="true"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>