<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:theming="clr-namespace:Sklavenwalker.CommonUtilities.Wpf.Theming"
                    xmlns:controls="clr-namespace:Sklavenwalker.CommonUtilities.Wpf.Controls;assembly=Sklavenwalker.CommonUtilities.WPF.Core"
                    xmlns:themes="clr-namespace:Sklavenwalker.CommonUtilities.Wpf.Themes.Colors">

    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="Border" Background="{DynamicResource {x:Static themes:CommonControlsColors.ScrollBarArrowBackground}}">
                        <Path x:Name="Glyph" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="None"
                              Fill="{DynamicResource {x:Static themes:CommonControlsColors.ScrollBarArrowGlyph}}">
                            <Path.Data>
                                <Binding Path="Content" RelativeSource="{RelativeSource TemplatedParent}"/>
                            </Path.Data>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background"
                                    Value="{DynamicResource {x:Static themes:CommonControlsColors.ScrollBarArrowMouseOverBackground}}"/>
                            <Setter TargetName="Glyph" Property="Shape.Fill"
                                    Value="{DynamicResource {x:Static themes:CommonControlsColors.ScrollBarArrowGlyphMouseOver}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Panel.Background"
                                    Value="{DynamicResource {x:Static themes:CommonControlsColors.ScrollBarArrowPressedBackground}}"/>
                            <Setter TargetName="Glyph" Property="Shape.Fill"
                                    Value="{DynamicResource {x:Static themes:CommonControlsColors.ScrollBarArrowGlyphPressed}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Panel.Background"
                                    Value="{DynamicResource {x:Static themes:CommonControlsColors.ScrollBarArrowDisabledBackground}}"/>
                            <Setter TargetName="Glyph" Property="Shape.Fill"
                                    Value="{DynamicResource {x:Static themes:CommonControlsColors.ScrollBarArrowGlyphDisabled}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="KeyboardNavigation.IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="KeyboardNavigation.IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
    </Style>


    <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}"
           BasedOn="{StaticResource ScrollBarThumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border x:Name="Border" BorderThickness="4,0" BorderBrush="Transparent"
                            Background="{DynamicResource {x:Static themes:CommonControlsColors.ScrollBarThumbBackground}}"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background"
                                    Value="{DynamicResource {x:Static themes:CommonControlsColors.ScrollBarThumbMouseOverBackground}}"/>
                        </Trigger>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter TargetName="Border" Property="Background"
                                    Value="{DynamicResource {x:Static themes:CommonControlsColors.ScrollBarThumbPressedBackground}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background"
                                    Value="{DynamicResource {x:Static themes:CommonControlsColors.ScrollBarThumbDisabled}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ScrollBarThumbHorizontal" TargetType="{x:Type Thumb}" BasedOn="{StaticResource ScrollBarThumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border x:Name="Border" BorderThickness="0,4" BorderBrush="Transparent"
                            Background="{DynamicResource {x:Static themes:CommonControlsColors.ScrollBarThumbBackground}}"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Panel.Background"
                                    Value="{DynamicResource {x:Static themes:CommonControlsColors.ScrollBarThumbMouseOverBackground}}"/>
                        </Trigger>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter TargetName="Border" Property="Panel.Background"
                                    Value="{DynamicResource {x:Static themes:CommonControlsColors.ScrollBarThumbPressedBackground}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Panel.Background"
                                    Value="{DynamicResource {x:Static themes:CommonControlsColors.ScrollBarThumbDisabled}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ScrollBarBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderThickness" Value="0"/>
        <Style.Triggers>
            <DataTrigger Value="True">
                <DataTrigger.Binding>
                    <Binding Source="{x:Static SystemParameters.HighContrast}"/>
                </DataTrigger.Binding>
                <Setter Property="BorderThickness" Value="1"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Border Background="{DynamicResource {x:Static themes:CommonControlsColors.ScrollBarBackground}}"
                BorderBrush="{DynamicResource {x:Static themes:CommonControlsColors.ScrollBarBorder}}"
                Style="{StaticResource ScrollBarBorderStyle}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                    <RowDefinition Height="0.00001*"/>
                    <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                </Grid.RowDefinitions>
                <controls:RoutedCommandRepeatButton Style="{StaticResource ScrollBarLineButton}" Grid.Row="0"
                                                    Height="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"
                                                    Command="ScrollBar.LineUpCommand" Content="M0,5 9,5 4.5,0z"/>
                <Track x:Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <controls:RoutedCommandRepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand"/>
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumbVertical}"/>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <controls:RoutedCommandRepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand"/>
                    </Track.IncreaseRepeatButton>
                </Track>
                <controls:RoutedCommandRepeatButton Style="{StaticResource ScrollBarLineButton}" Grid.Row="3"
                                                    Height="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"
                                                    Command="ScrollBar.LineDownCommand" Content="M0,0 9,0 4.5,5z"/>
            </Grid>
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Border Background="{DynamicResource {x:Static themes:CommonControlsColors.ScrollBarBackground}}"
                BorderBrush="{DynamicResource {x:Static themes:CommonControlsColors.ScrollBarBorder}}"
                Style="{StaticResource ScrollBarBorderStyle}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                    <ColumnDefinition Width="0.00001*"/>
                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                </Grid.ColumnDefinitions>
                <controls:RoutedCommandRepeatButton Style="{StaticResource ScrollBarLineButton}" Grid.Column="0"
                                                    Width="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"
                                                    Command="ScrollBar.LineLeftCommand" Content="M5,0 5,9 0,4.5z"/>
                <Track x:Name="PART_Track" Grid.Column="1" IsDirectionReversed="false">
                    <Track.DecreaseRepeatButton>
                        <controls:RoutedCommandRepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand"/>
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumbHorizontal}"/>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <controls:RoutedCommandRepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand"/>
                    </Track.IncreaseRepeatButton>
                </Track>
                <controls:RoutedCommandRepeatButton Style="{StaticResource ScrollBarLineButton}" Grid.Column="3"
                                                    Width="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"
                                                    Command="ScrollBar.LineRightCommand" Content="M0,0 0,9 5,4.5z"/>
            </Grid>
        </Border>
    </ControlTemplate>

    <Style x:Key="{x:Static theming:StyleResourceKeys.ScrollBarStyleKey}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                <Setter Property="Control.Template" Value="{StaticResource HorizontalScrollBar}"/>
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                <Setter Property="Height" Value="Auto"/>
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Static theming:StyleResourceKeys.ScrollViewerStyleKey}" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Rectangle x:Name="Corner" Grid.Row="1" Grid.Column="1" Fill="{DynamicResource {x:Static themes:CommonControlsColors.AutoHideResizeGrip}}"/>
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.Row="0" Grid.Column="0"
                                                CanHorizontallyScroll="false" CanVerticallyScroll="false" 
                                                CanContentScroll="{TemplateBinding CanContentScroll}"
                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                Content="{TemplateBinding Content}"
                                                Margin="{TemplateBinding Padding}"/>
                        <ScrollBar x:Name="PART_VerticalScrollBar" 
                                   Style="{StaticResource {x:Static theming:StyleResourceKeys.ScrollBarStyleKey}}" 
                                   Grid.Row="0" Grid.Column="1" Minimum="0" Orientation="Vertical" Cursor="Arrow"
                                   Maximum="{TemplateBinding ScrollableHeight}" 
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                                   Style="{StaticResource {x:Static theming:StyleResourceKeys.ScrollBarStyleKey}}" 
                                   Grid.Row="1" Grid.Column="0" Cursor="Arrow" Minimum="0" Orientation="Horizontal"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>