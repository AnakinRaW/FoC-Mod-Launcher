<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Sklavenwalker.CommonUtilities.Wpf.Controls"
                    xmlns:imaging="clr-namespace:Sklavenwalker.CommonUtilities.Wpf.Imaging;assembly=Sklavenwalker.CommonUtilities.WPF.Imaging"
                    xmlns:converters="clr-namespace:Sklavenwalker.CommonUtilities.Wpf.Converters"
                    xmlns:coreConverters="clr-namespace:Sklavenwalker.CommonUtilities.Wpf.Converters;assembly=Sklavenwalker.CommonUtilities.WPF.Core">

    <converters:BrushToColorConverter x:Key="BrushToColorConverter"/>
    <coreConverters:IsNullOrEmptyConverter x:Key="IsNullOrEmptyConverter"/>

    <Style TargetType="{x:Type controls:ThemedButton}">
        <Setter Property="imaging:ImageThemingUtilities.ImageBackgroundColor"
                Value="{Binding Background, RelativeSource={RelativeSource Self}, Converter={StaticResource BrushToColorConverter}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="Black"/>
        <Setter Property="BorderBrush" Value="Red"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:ThemedButton}">
                    <Border x:Name="Border" SnapsToDevicePixels="True"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter Focusable="False" RecognizesAccessKey="True" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter TargetName="Border" Value="White" 
                                    Property="BorderBrush"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Value="LightCoral"
                                    Property="Background"/>
                            <Setter TargetName="Border" Value="Gold"
                                    Property="BorderBrush"/>
                            <Setter Value="White" Property="Foreground"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Value="DeepPink"
                                    Property="Background"/>
                            <Setter TargetName="Border" Value="Green"
                                    Property="BorderBrush"/>
                            <Setter Value="White" Property="Foreground"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Value="Red" Property="Background"/>
                            <Setter TargetName="Border" Value="Blue" Property="BorderBrush"/>
                            <Setter Value="White" Property="Foreground"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>